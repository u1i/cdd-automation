{
    "components": {
        "schemas": {
            "Application": {
                "properties": {
                    "applicationDomainId": {
                        "example": "12345678",
                        "type": "string"
                    },
                    "changedBy": {
                        "example": "12345678",
                        "readOnly": true,
                        "type": "string"
                    },
                    "consumedEventIds": {
                        "example": "['12345678', '23456789']",
                        "items": {
                            "example": "['12345678', '23456789']",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "createdBy": {
                        "example": "12345678",
                        "readOnly": true,
                        "type": "string"
                    },
                    "createdTime": {
                        "example": 1583706406,
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "description": {
                        "example": "Application created by Solace PubSub+ Cloud documentation",
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "example": "My First Application",
                        "type": "string"
                    },
                    "ownerIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "producedEventIds": {
                        "example": "['12345678', '23456789']",
                        "items": {
                            "example": "['12345678', '23456789']",
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "revisionComment": {
                        "example": "Changed application name",
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "revisionNumber": {
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "tags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "updatedTime": {
                        "example": 1583706406,
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "version": {
                        "example": "0.0.1",
                        "readOnly": true,
                        "type": "string"
                    }
                },
                "type": "object",
                "writeOnly": true
            },
            "Application Domain": {
                "properties": {
                    "applicationIds": {
                        "items": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "applications": {
                        "items": {
                            "$ref": "#/components/schemas/Application"
                        },
                        "type": "array",
                        "writeOnly": true
                    },
                    "changedBy": {
                        "example": "12345678",
                        "readOnly": true,
                        "type": "string"
                    },
                    "createdBy": {
                        "example": "12345678",
                        "readOnly": true,
                        "type": "string"
                    },
                    "createdTime": {
                        "example": 1583706406,
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "defaultDomain": {
                        "example": false,
                        "readOnly": true,
                        "type": "boolean"
                    },
                    "description": {
                        "example": "Application Domain created by the Solace PubSub+ Cloud API documentation",
                        "type": "string"
                    },
                    "enforceUniqueTopicNames": {
                        "type": "boolean"
                    },
                    "eventIds": {
                        "items": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "events": {
                        "items": {
                            "$ref": "#/components/schemas/Event"
                        },
                        "type": "array",
                        "writeOnly": true
                    },
                    "id": {
                        "example": "12345678",
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "example": "My First Application Domain",
                        "type": "string"
                    },
                    "ownerIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "schemaIds": {
                        "items": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "schemas": {
                        "items": {
                            "$ref": "#/components/schemas/EventSchema"
                        },
                        "type": "array",
                        "writeOnly": true
                    },
                    "stats": {
                        "$ref": "#/components/schemas/Application Domain Stats"
                    },
                    "topicDomain": {
                        "example": "com/solace",
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updatedTime": {
                        "example": 1583706406,
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    }
                },
                "required": [
                    "enforceUniqueTopicNames"
                ],
                "type": "object"
            },
            "Application Domain Response": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Application Domain"
                    },
                    "meta": {
                        "additionalProperties": {
                            "type": "object"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Application Domain Stats": {
                "properties": {
                    "applicationCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "eventCount": {
                        "format": "int64",
                        "type": "integer"
                    },
                    "schemaCount": {
                        "format": "int64",
                        "type": "integer"
                    }
                },
                "readOnly": true,
                "type": "object"
            },
            "Application Domains Response": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/Application Domain"
                        },
                        "type": "array"
                    },
                    "meta": {
                        "additionalProperties": {
                            "type": "object"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Application Response": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Application"
                    },
                    "meta": {
                        "additionalProperties": {
                            "type": "object"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Applications Response": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/Application"
                        },
                        "type": "array"
                    },
                    "meta": {
                        "additionalProperties": {
                            "type": "object"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "AsyncAPI Server": {
                "properties": {
                    "description": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "protocol": {
                        "type": "string"
                    },
                    "protocolVersion": {
                        "type": "string"
                    },
                    "url": {
                        "type": "string"
                    },
                    "variables": {
                        "additionalProperties": {
                            "type": "object"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Error Response": {
                "properties": {
                    "errorId": {
                        "example": "123e4567-e89b-12d3-a456-426655440000",
                        "type": "string"
                    },
                    "message": {
                        "example": "An error occurred",
                        "type": "string"
                    },
                    "meta": {
                        "additionalProperties": {
                            "example": "'object': { 'field': 'description' }",
                            "type": "object"
                        },
                        "example": "'object': { 'field': 'description' }",
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Event": {
                "properties": {
                    "applicationDomainId": {
                        "type": "string"
                    },
                    "changedBy": {
                        "example": "12345678",
                        "readOnly": true,
                        "type": "string"
                    },
                    "consumedApplicationIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "createdBy": {
                        "example": "12345678",
                        "readOnly": true,
                        "type": "string"
                    },
                    "createdTime": {
                        "example": 1583706406,
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "description": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "ownerIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "producedApplicationIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "revisionComment": {
                        "example": "Changed event to shared",
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "revisionNumber": {
                        "format": "int32",
                        "type": "integer"
                    },
                    "schemaId": {
                        "type": "string"
                    },
                    "shared": {
                        "type": "boolean"
                    },
                    "tags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "topicName": {
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updatedTime": {
                        "example": 1583706406,
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "version": {
                        "type": "string"
                    }
                },
                "type": "object",
                "writeOnly": true
            },
            "Event Response": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Event"
                    },
                    "meta": {
                        "additionalProperties": {
                            "type": "object"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "EventSchema": {
                "properties": {
                    "applicationDomainId": {
                        "example": "12345678",
                        "type": "string"
                    },
                    "changedBy": {
                        "example": "12345678",
                        "readOnly": true,
                        "type": "string"
                    },
                    "content": {
                        "example": "{ \"$schema\": \"http://json-schema.org/draft-07/schema#\", \"$id\": \"http://example.com/root.json\",\"type\": \"object\", \"title\": \"An example schema\", \"required\": [ \"attribute\", ], \"properties\": { \"attribute\": { \"$id\": \"#/properties/attribute\", \"type\": \"string\", \"title\": \"An example of a string based attribute\", \"examples\": [ \"aValue\" ], \"pattern\": \"^(.*)$\" } }}",
                        "type": "string"
                    },
                    "contentType": {
                        "enum": [
                            "JSON",
                            "XML",
                            "Text",
                            "Binary"
                        ],
                        "example": "JSON",
                        "type": "string"
                    },
                    "createdBy": {
                        "example": "12345678",
                        "readOnly": true,
                        "type": "string"
                    },
                    "createdTime": {
                        "example": 1583706406,
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "description": {
                        "example": "Schema created by Solace PubSub+ Cloud API documentation",
                        "type": "string"
                    },
                    "eventIds": {
                        "items": {
                            "readOnly": true,
                            "type": "string"
                        },
                        "readOnly": true,
                        "type": "array"
                    },
                    "id": {
                        "example": "12345678",
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "example": "My First Schema",
                        "type": "string"
                    },
                    "ownerIds": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "revisionComment": {
                        "example": "Changed schema to shared",
                        "maxLength": 255,
                        "minLength": 0,
                        "type": "string"
                    },
                    "revisionNumber": {
                        "format": "int32",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "shared": {
                        "example": false,
                        "type": "boolean"
                    },
                    "tags": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "type": {
                        "readOnly": true,
                        "type": "string"
                    },
                    "updatedTime": {
                        "example": 1583706406,
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "version": {
                        "example": "0.0.1",
                        "type": "string"
                    }
                },
                "type": "object",
                "writeOnly": true
            },
            "Events Response": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/Event"
                        },
                        "type": "array"
                    },
                    "meta": {
                        "additionalProperties": {
                            "type": "object"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Generate AsyncAPI Request": {
                "properties": {
                    "asyncApiVersion": {
                        "type": "string"
                    },
                    "id": {
                        "type": "string"
                    },
                    "serverDTOList": {
                        "items": {
                            "$ref": "#/components/schemas/AsyncAPI Server"
                        },
                        "type": "array"
                    },
                    "type": {
                        "type": "string"
                    }
                },
                "required": [
                    "asyncApiVersion"
                ],
                "type": "object"
            },
            "Ids Response": {
                "properties": {
                    "data": {
                        "items": {
                            "type": "string"
                        },
                        "type": "array"
                    },
                    "meta": {
                        "additionalProperties": {
                            "type": "object"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Schema Response": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/EventSchema"
                    },
                    "meta": {
                        "additionalProperties": {
                            "type": "object"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Schemas Response": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/EventSchema"
                        },
                        "type": "array"
                    },
                    "meta": {
                        "additionalProperties": {
                            "type": "object"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Tag": {
                "properties": {
                    "changedBy": {
                        "example": "12345678",
                        "readOnly": true,
                        "type": "string"
                    },
                    "createdBy": {
                        "example": "12345678",
                        "readOnly": true,
                        "type": "string"
                    },
                    "createdTime": {
                        "example": 1583706406,
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    },
                    "id": {
                        "example": "12345678",
                        "readOnly": true,
                        "type": "string"
                    },
                    "name": {
                        "example": "My First Tag",
                        "maxLength": 25,
                        "minLength": 1,
                        "pattern": "^[\\s-,_a-zA-Z0-9]*$",
                        "type": "string"
                    },
                    "type": {
                        "type": "string"
                    },
                    "updatedTime": {
                        "example": 1583706406,
                        "format": "int64",
                        "readOnly": true,
                        "type": "integer"
                    }
                },
                "required": [
                    "name"
                ],
                "type": "object"
            },
            "Tag Response": {
                "properties": {
                    "data": {
                        "$ref": "#/components/schemas/Tag"
                    },
                    "meta": {
                        "additionalProperties": {
                            "type": "object"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "Tags Response": {
                "properties": {
                    "data": {
                        "items": {
                            "$ref": "#/components/schemas/Tag"
                        },
                        "type": "array"
                    },
                    "meta": {
                        "additionalProperties": {
                            "type": "object"
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "API Token": {
                "bearerFormat": "JWT",
                "scheme": "bearer",
                "type": "http"
            }
        }
    },
    "info": {
        "description": "# REST API Concepts\n\nSolace PubSub+ Event Portal provides a RESTful API that you can use to manage your data in Solace PubSub+ Cloud. The REST API allows you to model your event-driven architectures from your own client applications.\n\nThe following document describes the public REST APIs available in the Solace PubSub+ Event Portal.\n\n",
        "title": "Event Portal Open API",
        "version": "v1"
    },
    "openapi": "3.0.1",
    "paths": {
        "/api/v1/eventPortal/applicationDomains": {
            "get": {
                "description": "This API is used to retrieve a list of application domains that match the given parameters.",
                "operationId": "list",
                "parameters": [
                    {
                        "description": "The number of application domains to get per page. Min: 1 Max: 100",
                        "in": "query",
                        "name": "pageSize",
                        "required": false,
                        "schema": {
                            "default": 20,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The page number to get. Min: 1",
                        "in": "query",
                        "name": "pageNumber",
                        "required": false,
                        "schema": {
                            "default": 1,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Name of the application domain to match on.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Match the default application domain.",
                        "in": "query",
                        "name": "defaultDomain",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Match only application domains with the given ids separated by commas",
                        "in": "query",
                        "name": "ids",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Match only application domains with the given topic domain",
                        "in": "query",
                        "name": "topicDomain",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Application Domains Response"
                                }
                            }
                        },
                        "description": "Retrieve a list of application domains and the accompanying metadata."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Search for application domain objects",
                "tags": [
                    "Application Domains"
                ]
            },
            "post": {
                "description": "To help keep your event-driven architecture organized, application domains can be used to create namespaces for your applications, events and schemas to live.",
                "operationId": "create",
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/Application Domain"
                            }
                        }
                    },
                    "description": "Application domains have a name and topic domain.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Application Domain Response"
                                }
                            }
                        },
                        "description": "Created. The newly saved application domain object is returned in the response body."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Create an application domain object",
                "tags": [
                    "Application Domains"
                ]
            }
        },
        "/api/v1/eventPortal/applicationDomains/{id}": {
            "delete": {
                "description": "This API is used to delete an application domain. All applications, events, and schemas in the application domain will be deleted as well. This operation cannot be undone.",
                "operationId": "delete",
                "parameters": [
                    {
                        "description": "The ID of the application domain object",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content is returned."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Deletes an application domain object",
                "tags": [
                    "Application Domains"
                ]
            },
            "get": {
                "description": "This API is used to retrieve a single application domain by its ID.",
                "operationId": "get",
                "parameters": [
                    {
                        "description": "The ID of the application domain object",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Application Domain Response"
                                }
                            }
                        },
                        "description": "The application domain object."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Retrieve an application domain object",
                "tags": [
                    "Application Domains"
                ]
            },
            "patch": {
                "description": "This API is used to update an application domain. Only fields to be updated need to be specified.",
                "operationId": "update",
                "parameters": [
                    {
                        "description": "The ID of the application domain object",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/Application Domain"
                            }
                        }
                    },
                    "description": "The application domain object."
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Application Domain Response"
                                }
                            }
                        },
                        "description": "The updated application domain object."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Update an application domain object",
                "tags": [
                    "Application Domains"
                ]
            }
        },
        "/api/v1/eventPortal/applicationDomains/{id}/owners": {
            "get": {
                "description": "This API is used to retrieve all of the owners of an application domain. Owners are referenced by their user ID.",
                "operationId": "list_1",
                "parameters": [
                    {
                        "description": "The ID of the application domain to retrieve owners from",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ids Response"
                                }
                            }
                        },
                        "description": "An array of owners identified by their user ID"
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Retrieve the owners of an application domain",
                "tags": [
                    "Application Domains"
                ]
            },
            "put": {
                "description": "This API is used to update all of the owners of an application domain. Owners are referenced by their user ID.",
                "operationId": "update_1",
                "parameters": [
                    {
                        "description": "The ID of the application domain object to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "A list of user IDs"
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ids Response"
                                }
                            }
                        },
                        "description": "The updated application domain object."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Update the owners of an application domain",
                "tags": [
                    "Application Domains"
                ]
            }
        },
        "/api/v1/eventPortal/applications": {
            "get": {
                "description": "This API is used to retrieve a list of applications that match the given parameters.",
                "operationId": "list_2",
                "parameters": [
                    {
                        "description": "The number of applications to get per page. Min: 1 Max: 100",
                        "in": "query",
                        "name": "pageSize",
                        "required": false,
                        "schema": {
                            "default": 20,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The page number to get. Min: 1",
                        "in": "query",
                        "name": "pageNumber",
                        "required": false,
                        "schema": {
                            "default": 1,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Name of the application to match on.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Match only applications in the given application domain",
                        "in": "query",
                        "name": "applicationDomainId",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Match only applications with the given ids separated by commas",
                        "in": "query",
                        "name": "ids",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Applications Response"
                                }
                            }
                        },
                        "description": "Retrieve a list of applications and the accompanying metadata."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Search for application objects",
                "tags": [
                    "Applications"
                ]
            },
            "post": {
                "description": "In order to model your event-driven architecture, applications are a fundamental building block for modelling the producers and consumers of events. This API is used to create applications and model the events they produce and consume.",
                "operationId": "create_1",
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/Application"
                            }
                        }
                    },
                    "description": "Applications have a name and live within an application domain. Events can be added to the application as produced or consumed.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Application Response"
                                }
                            }
                        },
                        "description": "Created. The newly saved application object is returned in the response body."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Create an application object",
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/eventPortal/applications/{id}": {
            "delete": {
                "description": "This API is used to delete an application. If the application never existed or is alreadydeleted, the operation will still be successful.",
                "operationId": "delete_1",
                "parameters": [
                    {
                        "description": "The ID of the Schema application",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content is returned."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Deletes an application object",
                "tags": [
                    "Applications"
                ]
            },
            "get": {
                "description": "This API is used to retrieve a single application by its ID.",
                "operationId": "get_1",
                "parameters": [
                    {
                        "description": "The ID of the application object",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Application Response"
                                }
                            }
                        },
                        "description": "The application object."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Retrieve an application object",
                "tags": [
                    "Applications"
                ]
            },
            "patch": {
                "description": "This API is used to update an application. Only fields to be updated need to be specified.",
                "operationId": "update_2",
                "parameters": [
                    {
                        "description": "The ID of the application object to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/Application"
                            }
                        }
                    },
                    "description": "The application object."
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Application Response"
                                }
                            }
                        },
                        "description": "The updated application object."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Update an application object",
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/eventPortal/applications/{id}/generateAsyncApiRequest": {
            "post": {
                "operationId": "generateAsyncApi",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Generate AsyncAPI Request"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "string"
                                }
                            }
                        },
                        "description": "default response"
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "tags": [
                    "AsyncAPI"
                ]
            }
        },
        "/api/v1/eventPortal/applications/{id}/owners": {
            "get": {
                "description": "This API is used to retrieve all of the owners of an application. Owners are referenced by their user ID.",
                "operationId": "list_4",
                "parameters": [
                    {
                        "description": "The ID of the application to retrieve owners from",
                        "name": "applicationId",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ids Response"
                                }
                            }
                        },
                        "description": "An array of owners identified by their user ID"
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Retrieve the owners of an application",
                "tags": [
                    "Applications"
                ]
            },
            "put": {
                "description": "This API is used to update all of the owners of an application. Owners are referenced by their user ID.",
                "operationId": "update_4",
                "parameters": [
                    {
                        "description": "The ID of the application object to update",
                        "name": "applicationId",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "A list of user IDs"
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ids Response"
                                }
                            }
                        },
                        "description": "An array of updated owners identified by their user ID"
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Update the owners of an application",
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/eventPortal/applications/{id}/tags": {
            "get": {
                "description": "This API is used to retrieve all of the tags of an application. Tags are referenced by their tag ID.",
                "operationId": "list_3",
                "parameters": [
                    {
                        "description": "The ID of the application to retrieve tags from",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ids Response"
                                }
                            }
                        },
                        "description": "An array of tags identified by their tag ID"
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Retrieve the tags of an application",
                "tags": [
                    "Applications"
                ]
            },
            "put": {
                "description": "This API is used to update all of the tags of an application. Tags are referenced by their tag ID.",
                "operationId": "update_3",
                "parameters": [
                    {
                        "description": "The ID of the application object to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "A list of tag IDs"
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ids Response"
                                }
                            }
                        },
                        "description": "An array of the updated tags identified by their tag ID"
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Update the tags of an application",
                "tags": [
                    "Applications"
                ]
            }
        },
        "/api/v1/eventPortal/events": {
            "get": {
                "description": "This API is used to retrieve a list of events that match the given parameters.",
                "operationId": "list_5",
                "parameters": [
                    {
                        "description": "The number of events to get per page. Min: 1 Max: 100",
                        "in": "query",
                        "name": "pageSize",
                        "required": false,
                        "schema": {
                            "default": 20,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The page number to get. Min: 1",
                        "in": "query",
                        "name": "pageNumber",
                        "required": false,
                        "schema": {
                            "default": 1,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Name of the event to match on.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Topic name of the event to match on.",
                        "in": "query",
                        "name": "topicName",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Match only on shared or unshared events",
                        "in": "query",
                        "name": "shared",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Match only events which use the given schema",
                        "in": "query",
                        "name": "schemaId",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Match only events in the given application domain",
                        "in": "query",
                        "name": "applicationDomainId",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Match only events with the given ids separated by commas",
                        "in": "query",
                        "name": "ids",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Events Response"
                                }
                            }
                        },
                        "description": "Retrieve a list of events and the accompanying metadata."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Search for event objects",
                "tags": [
                    "Events"
                ]
            },
            "post": {
                "description": "Events are the primary building block of an event-driven architecture. Applications publish and subscribe to events and events reference schemas. Events are created with a topic that they are published to and that subscribers will subscribe to to receive the events from the message broker. In the event portal, an event is a type of event as opposed to a specific event instance.",
                "operationId": "add",
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/Event"
                            }
                        }
                    },
                    "description": "The event requires a name and a topic.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event Response"
                                }
                            }
                        },
                        "description": "Created. The newly saved event object is returned in the response body."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Create an event object",
                "tags": [
                    "Events"
                ]
            }
        },
        "/api/v1/eventPortal/events/{id}": {
            "delete": {
                "description": "This API is used to delete an event. The event must not be in use by any applications else it cannot be deleted.",
                "operationId": "delete_2",
                "parameters": [
                    {
                        "description": "The ID of the event object",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content is returned."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Deletes an event object",
                "tags": [
                    "Events"
                ]
            },
            "get": {
                "description": "This API is used to retrieve a single event by its ID.",
                "operationId": "get_2",
                "parameters": [
                    {
                        "description": "The ID of the event object",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event Response"
                                }
                            }
                        },
                        "description": "The event object."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Retrieve an event object",
                "tags": [
                    "Events"
                ]
            },
            "patch": {
                "description": "This API is used to update an event. Only fields to be updated need to be specified.",
                "operationId": "update_5",
                "parameters": [
                    {
                        "description": "The ID of the event object to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/Event"
                            }
                        }
                    },
                    "description": "The event object."
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Event Response"
                                }
                            }
                        },
                        "description": "The updated event object."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Update an event object",
                "tags": [
                    "Events"
                ]
            }
        },
        "/api/v1/eventPortal/events/{id}/owners": {
            "get": {
                "description": "This API is used to retrieve all of the owners of an event. Owners are referenced by their user ID.",
                "operationId": "list_7",
                "parameters": [
                    {
                        "description": "The ID of the event to retrieve owners from",
                        "name": "eventId",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ids Response"
                                }
                            }
                        },
                        "description": "An array of owners identified by their user ID"
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Retrieve the owners of an event",
                "tags": [
                    "Events"
                ]
            },
            "put": {
                "description": "This API is used to update all of the owners of an event. Owners are referenced by their user ID.",
                "operationId": "update_7",
                "parameters": [
                    {
                        "description": "The ID of the event object to update",
                        "name": "eventId",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "A list of user IDs"
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ids Response"
                                }
                            }
                        },
                        "description": "An array of updated owners identified by their user ID"
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Update the owners of an event",
                "tags": [
                    "Events"
                ]
            }
        },
        "/api/v1/eventPortal/events/{id}/tags": {
            "get": {
                "description": "This API is used to retrieve all of the tags of an event. Tags are referenced by their tag ID.",
                "operationId": "list_6",
                "parameters": [
                    {
                        "description": "The ID of the event to retrieve tags from",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ids Response"
                                }
                            }
                        },
                        "description": "An array of tags identified by their tag ID"
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Retrieve the tags of an event",
                "tags": [
                    "Events"
                ]
            },
            "put": {
                "description": "This API is used to update all of the tags of an event. Tags are referenced by their tag ID.",
                "operationId": "update_6",
                "parameters": [
                    {
                        "description": "The ID of the event object to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "A list of tag IDs"
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ids Response"
                                }
                            }
                        },
                        "description": "An array of the updated tags identified by their tag ID"
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Update the tags of an event",
                "tags": [
                    "Events"
                ]
            }
        },
        "/api/v1/eventPortal/schemas": {
            "get": {
                "description": "This API is used to retrieve a list of schemas that match the given parameters.",
                "operationId": "list_8",
                "parameters": [
                    {
                        "description": "The number of schemas to get per page. Min: 1 Max: 100",
                        "in": "query",
                        "name": "pageSize",
                        "required": false,
                        "schema": {
                            "default": 20,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The page number to get. Min: 1",
                        "in": "query",
                        "name": "pageNumber",
                        "required": false,
                        "schema": {
                            "default": 1,
                            "format": "int32",
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Name of the schema to match on.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Match only on shared or unshared schemas",
                        "in": "query",
                        "name": "shared",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "description": "Match only schemas in the given application domain",
                        "in": "query",
                        "name": "applicationDomainId",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Match only schemas with the given ids separated by commas",
                        "in": "query",
                        "name": "ids",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Schemas Response"
                                }
                            }
                        },
                        "description": "Retrieve a list of schemas and the accompanying metadata."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Search for schema objects",
                "tags": [
                    "Schemas"
                ]
            },
            "post": {
                "description": "In order to model your event-driven architecture, schemas are a fundamental building block for modelling the payloads of the events flowing through your system. This API is used to create schemas which can later be referenced by events.",
                "operationId": "add_1",
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/EventSchema"
                            }
                        }
                    },
                    "description": "The schema requires a name, an application domain, and a content type (one of XML, JSON, Binary, or Text). For JSON and XML based schemas, the content field must be populated with a valid JSON schema or XML schema (XSD or DTD). A schema should be marked as shared when it is allowed to be used by other application domains. If the schema should not be visible to other application domains, it should not be shared. The description field should be populated to describe to other users what the schema is and how it should be used (much like this description you're reading is describing the schema of this API).",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Schema Response"
                                }
                            }
                        },
                        "description": "Created. The newly saved schema object is returned in the response body."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Create a schema object",
                "tags": [
                    "Schemas"
                ]
            }
        },
        "/api/v1/eventPortal/schemas/{id}": {
            "delete": {
                "description": "This API is used to delete a schema. The schema must not be in use by any events else it cannot be deleted.",
                "operationId": "delete_3",
                "parameters": [
                    {
                        "description": "The ID of the schema object",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content is returned."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Deletes a schema object",
                "tags": [
                    "Schemas"
                ]
            },
            "get": {
                "description": "This API is used to retrieve a single schema by its ID.",
                "operationId": "get_3",
                "parameters": [
                    {
                        "description": "The ID of the schema object",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Schema Response"
                                }
                            }
                        },
                        "description": "The schema object."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Retrieve a schema object",
                "tags": [
                    "Schemas"
                ]
            },
            "patch": {
                "description": "This API is used to update a schema. Only fields to be updated need to be specified.",
                "operationId": "update_8",
                "parameters": [
                    {
                        "description": "The ID of the schema object to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/EventSchema"
                            }
                        }
                    },
                    "description": "The schema object."
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Schema Response"
                                }
                            }
                        },
                        "description": "The updated schema object."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Update a schema object",
                "tags": [
                    "Schemas"
                ]
            }
        },
        "/api/v1/eventPortal/schemas/{id}/owners": {
            "get": {
                "description": "This API is used to retrieve all of the owners of a schema. Owners are referenced by their user ID.",
                "operationId": "list_10",
                "parameters": [
                    {
                        "description": "The ID of the schema to retrieve owners from",
                        "name": "schemaId",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ids Response"
                                }
                            }
                        },
                        "description": "An array of owners identified by their user ID"
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Retrieve the owners of a schema",
                "tags": [
                    "Schemas"
                ]
            },
            "put": {
                "description": "This API is used to update all of the owners of a schema. Owners are referenced by their user ID.",
                "operationId": "update_10",
                "parameters": [
                    {
                        "description": "The ID of the schema object to update",
                        "name": "schemaId",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "A list of user IDs"
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ids Response"
                                }
                            }
                        },
                        "description": "An array of updated owners identified by their user ID"
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Update the owners of a schema",
                "tags": [
                    "Schemas"
                ]
            }
        },
        "/api/v1/eventPortal/schemas/{id}/tags": {
            "get": {
                "description": "This API is used to retrieve all of the tags of a schema. Tags are referenced by their tag ID.",
                "operationId": "list_9",
                "parameters": [
                    {
                        "description": "The ID of the schema to retrieve tags from",
                        "name": "schemaId",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ids Response"
                                }
                            }
                        },
                        "description": "An array of tags identified by their tag ID"
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Retrieve the tags of a schema",
                "tags": [
                    "Schemas"
                ]
            },
            "put": {
                "description": "This API is used to update all of the tags of a schema. Tags are referenced by their tag ID.",
                "operationId": "update_9",
                "parameters": [
                    {
                        "description": "The ID of the schema object to update",
                        "name": "schemaId",
                        "required": true
                    },
                    {
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "items": {
                                    "type": "string"
                                },
                                "type": "array"
                            }
                        }
                    },
                    "description": "A list of tag IDs"
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Ids Response"
                                }
                            }
                        },
                        "description": "An array of the updated tags identified by their tag ID"
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Update the tags of a schema",
                "tags": [
                    "Schemas"
                ]
            }
        },
        "/api/v1/eventPortal/tags": {
            "get": {
                "description": "This API is used to retrieve a list of tags that match the given parameters.",
                "operationId": "list_11",
                "parameters": [
                    {
                        "description": "The number of tags to get per page. Min: 1 Max: 100",
                        "in": "query",
                        "name": "pageSize",
                        "required": false,
                        "schema": {
                            "default": 20,
                            "format": "int32",
                            "maximum": 100,
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "The page number to get. Min: 1",
                        "in": "query",
                        "name": "pageNumber",
                        "required": false,
                        "schema": {
                            "default": 1,
                            "format": "int32",
                            "minimum": 1,
                            "type": "integer"
                        }
                    },
                    {
                        "description": "Name of the tag to match on.",
                        "in": "query",
                        "name": "name",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "description": "Match only tags with the given ids separated by commas",
                        "in": "query",
                        "name": "ids",
                        "required": false,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tags Response"
                                }
                            }
                        },
                        "description": "Retrieve a list of tags and the accompanying metadata."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Search for tags",
                "tags": [
                    "Tags"
                ]
            },
            "post": {
                "description": "Tags can be created to organize the objects of your event-driven architecture. Assign tags to objects to make them easier to group and find.",
                "operationId": "add_2",
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    },
                    "description": "Tags require a name.",
                    "required": true
                },
                "responses": {
                    "201": {
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag Response"
                                }
                            }
                        },
                        "description": "Created. The newly saved tag is returned in the response body."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Create a tag",
                "tags": [
                    "Tags"
                ]
            }
        },
        "/api/v1/eventPortal/tags/{id}": {
            "delete": {
                "description": "This API is used to delete a tag. The tag must not be in use by any objects else it cannot be deleted.",
                "operationId": "delete_4",
                "parameters": [
                    {
                        "description": "The ID of the tag",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No content is returned."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Deletes a tag",
                "tags": [
                    "Tags"
                ]
            },
            "get": {
                "description": "This API is used to retrieve a single tag by its ID.",
                "operationId": "get_4",
                "parameters": [
                    {
                        "description": "The ID of the tag",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag Response"
                                }
                            }
                        },
                        "description": "The tag."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Retrieve a tag",
                "tags": [
                    "Tags"
                ]
            },
            "put": {
                "description": "This API is used to update a tag.",
                "operationId": "update_11",
                "parameters": [
                    {
                        "description": "The ID of the tag object to update",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json;charset=UTF-8": {
                            "schema": {
                                "$ref": "#/components/schemas/Tag"
                            }
                        }
                    },
                    "description": "The tag."
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json;charset=UTF-8": {
                                "schema": {
                                    "$ref": "#/components/schemas/Tag Response"
                                }
                            }
                        },
                        "description": "The updated tag."
                    },
                    "400": {
                        "content": {
                            "*/*": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            },
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Bad Request."
                    },
                    "401": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Unauthorized."
                    },
                    "403": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Forbidden."
                    },
                    "404": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Not Found."
                    },
                    "500": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Internal Server Error."
                    },
                    "503": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Service Unavailable."
                    },
                    "504": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error Response"
                                }
                            }
                        },
                        "description": "Gateway Timeout."
                    }
                },
                "summary": "Update a tag",
                "tags": [
                    "Tags"
                ]
            }
        }
    },
    "security": [
        {
            "API Token": []
        }
    ],
    "servers": [
        {
            "description": "Solace PubSub+ Cloud",
            "url": "https://solace.cloud"
        }
    ]
}
